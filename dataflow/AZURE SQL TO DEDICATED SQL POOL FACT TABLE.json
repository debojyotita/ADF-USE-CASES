{
	"name": "AZURE SQL TO DEDICATED SQL POOL FACT TABLE",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SALESORDERHEADERDATASETS",
						"type": "DatasetReference"
					},
					"name": "SALESORDERHEADER",
					"description": "Import data from AzureSql"
				},
				{
					"dataset": {
						"referenceName": "SALESORDERDETAILDATASETS",
						"type": "DatasetReference"
					},
					"name": "SALESORDERDETAILDATASETS"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "DIMCUSTOMER"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "PRODUCTSTREAM"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable4",
						"type": "DatasetReference"
					},
					"name": "PRODUCTCATEGORY"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable3",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"description": "Export data to SalesLT.FactSales_MappingDataFlow"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable4",
						"type": "DatasetReference"
					},
					"name": "DIMCUSTOMERSINK"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable5",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "SELECT2"
				},
				{
					"name": "INNERJOINDIMPRODUCT"
				},
				{
					"name": "select3"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SALESORDERHEADER",
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SALESORDERDETAILDATASETS",
				"source(output(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DIMCUSTOMER",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> PRODUCTSTREAM",
				"source(output(",
				"          ProductCategoryID as integer,",
				"          ParentProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> PRODUCTCATEGORY",
				"SALESORDERHEADER, SALESORDERDETAILDATASETS join(SALESORDERHEADER@SalesOrderID == SALESORDERDETAILDATASETS@SalesOrderID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          SalesOrderID = SALESORDERHEADER@SalesOrderID,",
				"          OrderDate = SALESORDERHEADER@OrderDate,",
				"          CustomerID = SALESORDERHEADER@CustomerID,",
				"          Freight = SALESORDERHEADER@Freight,",
				"          Comment = SALESORDERHEADER@Comment,",
				"          rowguid = SALESORDERHEADER@rowguid,",
				"          ModifiedDate = SALESORDERHEADER@ModifiedDate,",
				"          RevisionNumber = SALESORDERDETAILDATASETS@RevisionNumber,",
				"          OrderDate = SALESORDERDETAILDATASETS@OrderDate,",
				"          DueDate = SALESORDERDETAILDATASETS@DueDate,",
				"          ShipDate = SALESORDERDETAILDATASETS@ShipDate,",
				"          Status = SALESORDERDETAILDATASETS@Status,",
				"          OnlineOrderFlag = SALESORDERDETAILDATASETS@OnlineOrderFlag,",
				"          SalesOrderNumber = SALESORDERDETAILDATASETS@SalesOrderNumber,",
				"          PurchaseOrderNumber = SALESORDERDETAILDATASETS@PurchaseOrderNumber,",
				"          AccountNumber = SALESORDERDETAILDATASETS@AccountNumber,",
				"          CustomerID = SALESORDERDETAILDATASETS@CustomerID,",
				"          ShipToAddressID = SALESORDERDETAILDATASETS@ShipToAddressID,",
				"          BillToAddressID = SALESORDERDETAILDATASETS@BillToAddressID,",
				"          ShipMethod = SALESORDERDETAILDATASETS@ShipMethod,",
				"          CreditCardApprovalCode = SALESORDERDETAILDATASETS@CreditCardApprovalCode,",
				"          SubTotal = SALESORDERDETAILDATASETS@SubTotal,",
				"          TaxAmt = SALESORDERDETAILDATASETS@TaxAmt,",
				"          Freight = SALESORDERDETAILDATASETS@Freight,",
				"          TotalDue = SALESORDERDETAILDATASETS@TotalDue,",
				"          Comment = SALESORDERDETAILDATASETS@Comment,",
				"          rowguid = SALESORDERDETAILDATASETS@rowguid,",
				"          ModifiedDate = SALESORDERDETAILDATASETS@ModifiedDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"DIMCUSTOMER select(mapColumn(",
				"          CustomerID,",
				"          CompanyName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECT2",
				"PRODUCTSTREAM, PRODUCTCATEGORY join(PRODUCTSTREAM@ProductCategoryID == PRODUCTCATEGORY@ProductCategoryID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> INNERJOINDIMPRODUCT",
				"INNERJOINDIMPRODUCT select(mapColumn(",
				"          ProductID,",
				"          ProductNumber,",
				"          Color,",
				"          ProductCategoryID = PRODUCTSTREAM@ProductCategoryID,",
				"          ProductCategoryName = PRODUCTCATEGORY@Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 filter(!isNull(Color)) ~> filter1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"SELECT2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerSk as integer,",
				"          CustomerID as integer,",
				"          CompanyName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> DIMCUSTOMERSINK",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductSK as integer,",
				"          ProductCategoryID as integer,",
				"          Color as string,",
				"          ProductID as integer,",
				"          ProductNumber as string,",
				"          ProductCategoryName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
			]
		}
	}
}