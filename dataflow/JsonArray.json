{
	"name": "JsonArray",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json2",
						"type": "DatasetReference"
					},
					"name": "JsonArray"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable6",
						"type": "DatasetReference"
					},
					"name": "sinkcourse"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          customerid as integer,",
				"          customername as string,",
				"          registered as boolean,",
				"          courses as string[],",
				"          details as (mobile as string, city as string)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> JsonArray",
				"JsonArray foldDown(unroll(courses, courses),",
				"     mapColumn(",
				"          CustomerId = customerid,",
				"          CustomerName = customername,",
				"          IsRegistered = registered,",
				"          course = courses,",
				"          Mobile = details.mobile,",
				"          City = details.city",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> flatten1",
				"flatten1 sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     input(",
				"          CUSTOMERID as integer,",
				"          CUSTOMERNAME as string,",
				"          ISREGISTERTED as boolean,",
				"          COURSE as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     preSQLs:['DELETE FROM COURSES'],",
				"     postSQLs:['SELECT COUNT(*) FROM COURSES'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CUSTOMERID = customerid,",
				"          CUSTOMERNAME = CustomerName,",
				"          ISREGISTERTED = IsRegistered,",
				"          COURSE = course",
				"     )) ~> sinkcourse"
			]
		}
	}
}